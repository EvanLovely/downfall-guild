<?php
// $Id: signup.install,v 1.16 2007/12/22 09:07:18 dww Exp $

/**
 * Implementation of hook_install()
 *

function signup_schema() {
  $schema['signup'] = array(
     'description' => t('Signup module per-node settings.'),
     'fields' => array(
      'nid' => array(
        'description' => t('Identifier for nodes.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'forwarding_email' => array(
        'description' => t('Email to send signup notifications to.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''),
      'send_confirmation' => array(
        'description' => t('Should a confirmation be sent?'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0),
      'confirmation_email' => array(
        'description' => t('Email to send when user signs up.'),
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
        'default' => ''),
      'send_reminder' => array(
        'description' => t('Send a reminder?.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0),
      'reminder_days_before' => array(
        'description' => t('How many days before the event?'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'reminder_email' => array(
        'description' => t('Email to send for reminder.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''),
      'close_in_advance_time' => array(
        'description' => t('How many hours before the event should it be closed?'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'close_signup_limit' => array(
        'description' => t('Max number of signups before signup is closed.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'status' => array(
        'description' => t('Signup status: 1=enabled, 0=disabled.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1),
      ),

    'primary key' => array('nid'),

  );
  $schema['signup_log'] = array(
    'description' => t('Signup module table for recording signups.'),
    'fields' => array(
      'nid' => array(
        'description' => t('Identifier for nodes.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'uid' => array(
        'description' => t('Identifier for user.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'anon_mail' => array(
        'description' => t('Email, is user is anonymous.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => ''),
      'signup_time' => array(
        'description' => t('Signup time.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'form_data' => array(
        'description' => t('Other values saved and displayed.'),
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE),
    ),
    'indexes' => array(
      'nodeid'        => array('nid'),
      'userid'        => array('uid'),
    ),
  );
  return $schema;
}

function signup_install() {
  drupal_install_schema('signup');
  signup_insert_default_signup_info();
}

function signup_uninstall() {
  drupal_uninstall_schema('signup');
  $variables = db_query("SELECT name FROM {variable} WHERE name LIKE 'signup%%'");
  while ($variable = db_fetch_object($variables)) {
    variable_del($variable->name);
  }
}

/**
 * Helper method to insert the default signup information into the
 * {signup} table (stored in a row for nid 0).  These are the default
 * settings for new signup-enabled nodes.
 */
function signup_insert_default_signup_info() {
  return db_query("INSERT INTO {signup} (nid, forwarding_email,
    send_confirmation, confirmation_email,
    send_reminder, reminder_days_before, reminder_email,
    close_in_advance_time, close_signup_limit, status) VALUES (0, '',
    1, 'Enter your default confirmation email message here',
    1, 0, 'Enter your default reminder email message here', 0, 0, 1)");
}
