<?php
// $Id: wowarmory.module,v 1.2.2.2 2010/03/24 00:51:18 nhdriver4 Exp $

/**
 * @file
 * Periodically download and store roster information for The World of Warcraft.
 */

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function wowarmory_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#wowarmory":
      $output = '<p>'.  t("Parses and Displays guild and character information from the World of Warcraft armory.") .'</p>';
      break;
  }
  return $output;
} // function wowarmory_help

/**
 * Implementation of hook_init().
 */
function wowarmory_init() {
  drupal_add_css(drupal_get_path('module', 'wowarmory') .'/wowarmory.css');

  // Need to come up with an alternative to this script.
  //drupal_add_js(drupal_get_path('module', 'wowarmory') .'/wz_tooltip/wz_tooltip.js', 'module', 'footer');

}

function wowarmory_cron() {
  require_once('wowarmory.inc');
  // Add some checks to allow the user to define the time that should pass before it's updated? This can also be a security
  // risk, as anyone can run cron over and over and actually get you temp banned from the armory.
  // For now, just update when cron is called.

  _wowarmory_update_roster();
}


/**
* Valid permissions for this module
* @return array An array of valid permissions for the wowarmory module
*/

function wowarmory_perm() {
  return array('access wowarmory', 'administer wowarmory');
} // function wowarmory_perm()


function wowarmory_admin() {

  $form['settings_general'] = array(
  '#type' => 'fieldset',
  '#title' => t('General settings'),
  '#collapsible' => TRUE,
  );
  $form['settings_general']['wowarmory_realm'] = array(
  '#type' => 'textfield',
  '#title' => t('Realm Name'),
  '#default_value' => variable_get('wowarmory_realm', ''),
  '#size' => 32,
  '#maxlength' => 32,
  '#description' => t("The realm that your guild is on."),
  '#required' => TRUE,
  );
  $form['settings_general']['wowarmory_guild'] = array(
  '#type' => 'textfield',
  '#title' => t('Guild Name'),
  '#default_value' => variable_get('wowarmory_guild', ''),
  '#size' => 32,
  '#maxlength' => 32,
  '#description' => t("The name of your guild."),
  '#required' => TRUE,
  );
  $form['settings_general']['wowarmory_region'] = array(
  '#type' => 'select',
  '#title' => t('Region'),
  '#default_value' => variable_get('wowarmory_region', 'en'),
  '#options' => array('en', 'eu'),
  '#description' => t("The region of your realm."),
  '#required' => TRUE,
  );

  $form['options_general'] = array(
  '#type' => 'fieldset',
  '#title' => t('General options'),
  '#collapsible' => TRUE,
  );
  $form['options_general']['wowarmory_rostermax'] = array(
  '#type' => 'textfield',
  '#title' => t('Maximum Rows'),
  '#default_value' => variable_get('wowarmory_rostermax', 20),
  '#size' => 3,
  '#maxlength' => 2,
  '#description' => t("The maximum rows to return per page for the guild roster display."),
  '#required' => TRUE,
  );

  $form['guild_rank'] = array(
  '#type' => 'fieldset',
  '#title' => t('Guild Ranks'),
  '#collapsible' => TRUE,

  '#description' => '<p>'. t("Guild ranks are downloaded from the armory as numbers. If you would like something other than numbers to be displayed, change the below fields.") .'</p>',
  );

  // There are 9 possible ranks to be shown. Create 9 different fields.
  $form['guild_rank']['wowarmory_rank_0'] = array(
  '#type' => 'textfield',
  '#title' => t('The Guild Masters\' title'),
  '#default_value' => variable_get('wowarmory_rank_0', 'Guild Master'),
  '#size' => 30,
  '#maxlength' => 30,
  '#required' => FALSE,
  );


  for ($i = 0; $i <= 9; $i++) {
    $form['guild_rank']['wowarmory_rank_'. $i] = array(
    '#type' => 'textfield',
    '#title' => t('Rank '. $i .' title'),
    '#default_value' => variable_get('wowarmory_rank_'. $i , $i),
    '#size' => 30,
    '#maxlength' => 30,
    '#required' => FALSE,
    );
  }


  return system_settings_form($form);
}

function wowarmory_menu() {

  $items = array();

  $items['admin/settings/wowarmory'] = array(
  'title' => 'WoW Armory',
  'description' => 'Configure the WoW Armory plugin',
  'page callback' => 'drupal_get_form',
  'page arguments' => array('wowarmory_admin'),
  'access arguments' => array('access administration pages'),
  'type' => MENU_NORMAL_ITEM,
  );

  $items['wowarmory'] = array(
  'title' => t('Guild Roster'),
  'page callback' => 'wowarmory_showroster',
  'access arguments' => array('access wowarmory'),
  'type' => MENU_CALLBACK,
  );

  $items['wowarmory/toon'] = array(
  'title' => t('Character Page'),
  'page callback' => 'wowarmory_showtoon',
  'access arguments' => array('access wowarmory'),
  'type' => MENU_CALLBACK,
  );

  return $items;
}

function wowarmory_showtoon() {
  require_once('wowarmory.inc');
  $output .= (_wowarmory_update_toon('Snykx'));
  //echo $output;
  //return $output;

}


/**
* Generate HTML for the wowarmory blocks
* @param op the operation from the URL
* @param delta offset
* @returns block HTML

function wowarmory_block($op='list', $delta=0) {
  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
    $block[0]["info"] = t('Roster Facts');
    return $block;
  }
} // end wowarmory_block
*/


/**
 * Diplay the simple roster
 * @return simple roster HTML
 *
 */
function wowarmory_showroster() {
  require_once('wowarmory.inc');
  $page_limitnum = variable_get('wowarmory_rostermax', 20);
  $realm = variable_get('wowarmory_realm', '');
  $guild = variable_get('wowarmory_guild', '');

  // Query to get the list of members, and some details about them
  $query = 'SELECT * FROM {wowarmory_roster}';

  // Make the header array
  $header = array(
  array('data' => t('Name'), 'field' => 'name'),
  array('data' => t('Level'), 'field' => 'level'),
  array('data' => t('Race'), 'field' => 'raceId'),
  array('data' => t('Class'), 'field' => 'classId'),
  array('data' => t('Guild Rank'), 'field' => 'rank', 'sort' => 'asc'),
  array('data' => t('Acheivement Points'), 'field' => 'achPoints'),
  );

  $query .= tablesort_sql($header);

  // Run the query with pagable results
  $result = pager_query($query, $page_limitnum);

  while ($member = db_fetch_object($result)) {

    $raceimg = "<img src='" . drupal_get_path('module', 'wowarmory') . "/roster_icons/"  . $member->raceId . "-" . $member->genderId . ".gif' alt='" . $member->raceId .
    "' width='20' height='20' align='absmiddle' hspace='3' />";

    $classimg =  "<img src='" . drupal_get_path('module', 'wowarmory') . "/roster_icons/" . $member->classId . ".gif' alt='" . $member->classId . "' width='20' height='20' align='absmiddle' hspace='3' />";

    // Create URI for Character to link to wow armory
    // $xml_url = "http://www.wowarmory.com/" . $page .".xml?r=" . urlencode($realm) . "&n=" . urlencode($name);
    if (variable_get('wowarmory_region', '') == 0) {
      $name = '<a href = "http://www.wowarmory.com/character-sheet.xml?r=' . $realm . '&n=' . $member->name . '">' . $member->name . '</a>';
    }
    if (variable_get('wowarmory_region', '') == 1) {
      $name = '<a href = "http://www.wowarmory.com/character-sheet.xml?r=' . $realm . '&n=' . $member->name . '">' . $member->name . '</a>';
    }


    $rank = variable_get('wowarmory_rank_'. $member->rank, $member->rank);

    $rows[] = array($name, $member->level, $raceimg . $member->race, $classimg . $member->class, $rank, $member->achPoints);
  }



  // Output the table

  $output .= theme('table', $header, $rows);
  $output .= theme('pager', NULL, $page_limitnum);

  return $output;
}